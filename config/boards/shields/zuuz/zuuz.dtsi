/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/matrix_transform.h>

/ {

    chosen {
        zmk,kscan = &kscan0;
        zmk,matrix_transform = &default_transform;
    };
	 
    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        rows = <7>;
        columns = <12>;

        map = <
RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4)   RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9) 
RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4)   RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9) 
RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4)   RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(2,9) 

        RC(4,1) RC(4,2) RC(4,3) RC(4,4)  RC(4,5) RC(4,6) RC(4,7) RC(4,8)  			 
								 
        >;

        // Include the matrix driver 
        matrix {
            kscan = <&kscan1>;
        };

        // Include the direct GPIO driver...
        direct {
            kscan = <&kscan2>;
            row-offset = <4>; // ...and shift it to not overlap
        };
    };
 
    kscan0: kscan_composite  {
        compatible = "zmk,kscan-composite";
        columns = <10>;
        rows = <5>;

        // Include the matrix driver
        matrix {
            kscan = <&kscan1>;
        };

        // Include the direct GPIO driver...
        direct {
            kscan = <&kscan2>;
            row-offset = <6>; // ...and shift it to not overlap
        };
	};

    kscan1: kscan_matrix  {
        compatible = "zmk,kscan-gpio-matrix";
		
		diode-direction = "col2row";
		
		row-gpios
        = <&pro_micro 2 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // Row A from the schematic file
            , <&pro_micro 3 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 4 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 5 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			;
    };

    kscan2: kscan_direct {
        compatible = "zmk,kscan-gpio-direct";
        input-gpios
        = <&pro_micro 14 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
        , <&pro_micro 8  (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
	   ;
	};

	
  left_encoder: left_encoder {
        compatible = "alps,ec11";
		steps = <20>;
        status = "disabled";
        a-gpios = <&pro_micro 9 GPIO_PULL_UP>;
        b-gpios = <&pro_micro 16 GPIO_PULL_UP>;
    };

    right_encoder: right_encoder {
        compatible = "alps,ec11";
		steps = <20>;
        status = "disabled";
        a-gpios = <&pro_micro 9 GPIO_PULL_UP>;
        b-gpios = <&pro_micro 16 GPIO_PULL_UP>;
    };

    sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&left_encoder &right_encoder>;
    };
};